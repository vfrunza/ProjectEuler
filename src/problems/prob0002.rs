/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89,

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/
use std::time::Instant;

pub fn problem0002() {
    println!("Problem 2 - Even Fibonacci Numbers");

    let iterations = 100000;
    let target = 1000;
    let now = Instant::now();

    for _i in 1..iterations {
        bruteforce(target);
    }

    let elapsed = now.elapsed();

    let sum = bruteforce(target);

    println!("Solution: {} | Elapsed: {:.2?}", sum, elapsed / iterations);
}

fn fibonacci(n: i32) -> i32 {
    if n == 1 {
        return 1;
    }
    if n == 2 {
        return 2;
    }
    fibonacci(n - 1) + fibonacci(n - 2)
}

fn bruteforce(target: i32) -> i32 {
    let mut sum = 0;
    let mut n = 1;
}
